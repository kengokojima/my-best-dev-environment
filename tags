!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20201011.0/
DEBUG	webpack.config.js	/^const DEBUG = MODE === 'development'$/;"	C
Globule	webpack.config.js	/^const Globule = require('globule')$/;"	C
HtmlWebpackPlugin	webpack.config.js	/^const HtmlWebpackPlugin = require('html-webpack-plugin')$/;"	C
ImageminMozjqeg	webpack.config.js	/^const ImageminMozjqeg = require('imagemin-mozjpeg')$/;"	C
ImageminPlugin	webpack.config.js	/^const ImageminPlugin = require('imagemin-webpack-plugin').default$/;"	C
MODE	webpack.config.js	/^const MODE = process.env.NODE_ENV$/;"	C
MiniCssExtractPlugin	webpack.config.js	/^const MiniCssExtractPlugin = require('mini-css-extract-plugin')$/;"	C
STYLELINT	webpack.config.js	/^const STYLELINT = ['.\/src\/scss\/**\/*.scss']$/;"	C
StylelintPlugin	webpack.config.js	/^const StylelintPlugin = require('stylelint-webpack-plugin')$/;"	C
app	webpack.config.js	/^const app = {$/;"	c
buildDependencies	webpack.config.js	/^    buildDependencies: {$/;"	c	class:app.cache
cache	webpack.config.js	/^  cache: {$/;"	c	class:app
config	webpack.config.js	/^      config: [__filename],$/;"	p	class:app.cache.buildDependencies
contentBase	webpack.config.js	/^    contentBase: path.resolve(__dirname, 'dist'),$/;"	p	class:app.devServer
devServer	webpack.config.js	/^  devServer: {$/;"	c	class:app
documents	webpack.config.js	/^  const documents = Globule.find('.\/src\/pug\/**\/*.pug', {$/;"	C
entry	webpack.config.js	/^  entry: {$/;"	c	class:app
esModule	webpack.config.js	/^    esModule: false,$/;"	p	class:urlLoader.options
extensions	webpack.config.js	/^    extensions: ['.ts', '.js'],$/;"	p	class:app.resolve
fileLoader	webpack.config.js	/^const fileLoader = {$/;"	c
filename	webpack.config.js	/^    filename: 'js\/[name].js',$/;"	p	class:app.output
generatePug	webpack.config.js	/^const generatePug = () => {$/;"	C
host	webpack.config.js	/^    host: '0.0.0.0',$/;"	p	class:app.devServer
hot	webpack.config.js	/^    hot: true,$/;"	p	class:app.devServer
imgLoader	webpack.config.js	/^const imgLoader = DEBUG ? urlLoader : fileLoader$/;"	C
inline	webpack.config.js	/^    inline: true,$/;"	p	class:app.devServer
loader	webpack.config.js	/^  loader: 'url-loader',$/;"	p	class:urlLoader
main	webpack.config.js	/^    main: '.\/src\/ts\/main.ts',$/;"	p	class:app.entry
mode	webpack.config.js	/^  mode: MODE,$/;"	p	class:app
module	webpack.config.js	/^  module: {$/;"	c	class:app
open	webpack.config.js	/^    open: true,$/;"	p	class:app.devServer
openPage	webpack.config.js	/^    openPage: 'index.html',$/;"	p	class:app.devServer
options	webpack.config.js	/^  options: {$/;"	c	class:urlLoader
output	webpack.config.js	/^  output: {$/;"	c	class:app
path	webpack.config.js	/^    path: path.resolve(__dirname, 'dist'),$/;"	p	class:app.output
path	webpack.config.js	/^const path = require('path')$/;"	C
plugins	webpack.config.js	/^  plugins: [$/;"	p	class:app
port	webpack.config.js	/^    port: 8005,$/;"	p	class:app.devServer
publicPath	webpack.config.js	/^    publicPath: '\/',$/;"	p	class:app.devServer
resolve	webpack.config.js	/^  resolve: {$/;"	c	class:app
rules	webpack.config.js	/^    rules: [$/;"	p	class:app.module
test	webpack.config.js	/^  test: \/\\.(png|jpe?g|gif|svg)$\/,$/;"	p	class:fileLoader
test	webpack.config.js	/^  test: \/\\.(png|jpe?g|gif|svg)$\/,$/;"	p	class:urlLoader
type	webpack.config.js	/^    type: 'filesystem',$/;"	p	class:app.cache
urlLoader	webpack.config.js	/^const urlLoader = {$/;"	c
use	webpack.config.js	/^  use: [$/;"	p	class:fileLoader
watchContentBase	webpack.config.js	/^    watchContentBase: true,$/;"	p	class:app.devServer
